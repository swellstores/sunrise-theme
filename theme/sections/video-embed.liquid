{% comment %}
  Renders a video embed section.

  Usage:
  {% sections 'video-embed' %}
{% endcomment %}

{% liquid
  assign color_scheme = section.settings.color_scheme
  assign text_alignment = section.settings.text_alignment
  assign grid_order = section.settings.grid_order
  assign iframe = section.settings.iframe
  assign video_position = section.settings.video_position
%}

{%- liquid
  assign top_padding = section.settings.top_padding | times: 0.1 | round: 1
  assign bottom_padding = section.settings.bottom_padding | times: 0.1 | round: 1
  assign reduced_padding_top = top_padding | times: 0.55 | round: 2
  assign reduced_padding_bottom = bottom_padding | times: 0.55 | round: 2
-%}

{% style %}
  .responsive-padding-{{ section.id }} {
    padding-top: {{ reduced_padding_top }}rem;
    padding-bottom: {{ reduced_padding_bottom }}rem;
  }

  @media (min-width: 1024px) {
    .responsive-padding-{{ section.id }} {
      padding-top: {{ top_padding }}rem;
      padding-bottom: {{ bottom_padding }}rem;
    }
  }
{% endstyle %}

<div
  class="w-full h-full pt-64 pb-64 lg:pl-96 lg:pr-96 text-{{ text_alignment }} bg-{{ color_scheme }} text-{{ color_scheme }} lg:pt-160 lg:pb-160 responsive-padding-{{ section.id }}"
  {% comment %}
    style="padding-top: {{ section.settings.top_padding | times: 0.1 | round: 1 }}rem; padding-bottom: {{ section.settings.bottom_padding | times: 0.1 | round: 1 }}rem;"
  {% endcomment %}
>
  <div class="max-w-container 2xl:max-w-container mx-auto">
    <div class="flex flex-col max-w-content mx-auto lg:h-384 lg:flex-row gap-64 {% if video_position == 'right' %} lg:flex-row-reverse {% endif %}">
      <div class="flex items-center justify-center lg:w-550 aspect-video relative {% if grid_order %}order-last{% endif %}">
        <div class="absolute inset-0 z-10 cursor-pointer" onclick="this.style.display='none';">
          {% render 'image',
            placeholder: 'hero-apparel-3',
            image: section.settings.cover_image,
            alt: section.settings.image.alt | default: "Image banner",
            class: 'w-full h-full object-cover'
          %}
        </div>
        {{ iframe | embedded_content }}
      </div>
      {%- if section.blocks.size >= 1 -%}
        <div class="flex items-center justify-center flex-col max-w-555 lg:p-0 pl-24 pr-24">
          <div
            class="
              flex flex-col gap-32
              {% case section.settings.text_alignment %}
              {% when 'center' %} items-center
              {% when 'right' %} items-end
              {% else %} items-start
              {% endcase %}
            "
          >
            <div class="flex flex-col gap-16">
              {%- for block in section.blocks -%}
                {%- assign need_open_div = true -%}
                {%- if forloop.index0 > 0 -%}
                  {%- if section.blocks[forloop.index0 - 1] == 'heading' or section.blocks[forloop.index0 - 1] == 'text' -%}
                    {%- assign need_open_div = false -%}
                  {%- endif -%}
                {%- endif -%}
                {%- assign need_close_div = true -%}
                {%- if forloop.index0 < section.blocks.size - 1 -%}
                  {%- if section.blocks[forloop.index0 + 1] == 'heading' or section.blocks[forloop.index0 + 1] == 'text' -%}
                    {%- assign need_close_div = false -%}
                  {%- endif -%}
                {%- endif -%}

                {%- case block.type -%}
                  {%- when 'pre_heading' -%}
                    <p class="font-display font-pre-heading text-pre-heading" {{ block.swell_attributes }}>
                      {{ block.settings.pre_heading | inline_editable: 'pre_heading' }}
                    </p>
                  {%- when 'heading' -%}
                    {%- if need_open_div -%}
                      <div class="flex flex-col gap-4" {{ block.swell_attributes }}>
                    {%- endif -%}

                    <h2
                      class="font-display font-heading text-heading-{{ block.settings.heading_size | default: 'small' }}"
                      {% unless need_open_div %}
                        {{ block.swell_attributes }}
                      {% endunless %}
                    >
                        {{ block.settings.heading | inline_editable: 'heading' }}
                    </h2>

                    {%- if need_close_div -%}
                      </div>
                    {%- endif -%}
                  {%- when 'text' -%}
                    {%- if need_open_div -%}
                      <div class="flex flex-col gap-4" {{ block.swell_attributes }}>
                    {%- endif -%}

                    <p
                      class="font-display formatted-text text-content"
                      {% unless need_open_div %}
                        {{ block.swell_attributes }}
                      {% endunless %}
                    >
                      {{ block.settings.text | inline_editable: 'text' }}
                    </p>

                    {%- if need_close_div -%}
                      </div>
                    {%- endif -%}
                  {%- when 'button' -%}
                    <div class="flex self-center" {{ block.swell_attributes }}>
                      {% render 'button',
                        text: block.settings.button_label,
                        href: block.settings.button_link,
                        color_scheme: color_scheme,
                        variant: block.settings.button_variant
                      %}
                    </div>
                {%- endcase -%}
              {%- endfor -%}
            </div>
          </div>
        </div>
      {%- endif -%}
    </div>
  </div>
</div>

{% schema %}
{
  "name": "t:sections.video_embed.name",
  "tag": "section",
  "disabled_on": { "groups": ["header", "footer"] },
  "settings": [
    {
      "type": "textarea",
      "id": "iframe",
      "label": "t:sections.video_embed.settings.iframe.label",
      "info": "t:sections.video_embed.settings.iframe.info",
      "default": "<iframe width='100%' height='100%' src='https://www.youtube.com/embed/NpEaa2P7qZI?si=NQcMz0-jycTcGeaq' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share' referrerpolicy='strict-origin-when-cross-origin' allowfullscreen></iframe>"
    },
    {
      "type": "image_picker",
      "id": "cover_image",
      "label": "t:sections.video_embed.settings.cover_image.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "select",
      "id": "video_position",
      "label": "t:sections.video_embed.settings.video_position.label",
      "default": "left",
      "options": [
        { "value": "left", "label": "t:sections.video_embed.settings.video_position.options__left.label" },
        { "value": "right", "label": "t:sections.video_embed.settings.video_position.options__right.label" }
      ]
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "t:sections.all.text_alignment.label",
      "default": "left",
      "options": [
        {
          "value": "left",
          "label": "t:sections.all.text_alignment.options__left.label"
        },
        {
          "value": "center",
          "label": "t:sections.all.text_alignment.options__center.label"
        },
        {
          "value": "right",
          "label": "t:sections.all.text_alignment.options__right.label"
        }
      ]
    },
    {
      "type": "range",
      "id": "top_padding",
      "label": "t:sections.all.padding.padding_top",
      "min": 0,
      "max": 96,
      "step": 1,
      "unit": "px",
      "default": 40
    },
    {
      "type": "range",
      "id": "bottom_padding",
      "label": "t:sections.all.padding.padding_bottom",
      "min": 0,
      "max": 96,
      "step": 1,
      "unit": "px",
      "default": 40
    }
  ],
  "blocks": [
    {
      "type": "pre_heading",
      "name": "t:sections.video_embed.blocks.pre_heading.name",
      "limit": 1,
      "settings": [
        {
          "type": "inline_richtext",
          "id": "pre_heading",
          "label": "t:sections.video_embed.blocks.pre_heading.settings.pre_heading.label"
        }
      ]
    },
    {
      "type": "heading",
      "name": "t:sections.video_embed.blocks.heading.name",
      "limit": 1,
      "settings": [
        {
          "type": "inline_richtext",
          "id": "heading",
          "label": "t:sections.video_embed.blocks.heading.settings.heading.label",
          "default": "t:sections.video_embed.blocks.heading.settings.heading.default"
        },
        {
          "type": "select",
          "id": "heading_size",
          "label": "t:sections.all.heading_size.label",
          "default": "small",
          "options": [
            { "value": "small", "label": "t:sections.all.heading_size.options__small.label" },
            { "value": "medium", "label": "t:sections.all.heading_size.options__medium.label" },
            { "value": "large", "label": "t:sections.all.heading_size.options__large.label" },
            { "value": "extra-large", "label": "t:sections.all.heading_size.options__extra_large.label" }
          ]
        }
      ]
    },
    {
      "type": "text",
      "name": "t:sections.video_embed.blocks.text.name",
      "limit": 1,
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "label": "t:sections.video_embed.blocks.text.settings.text.label",
          "default": "t:sections.video_embed.blocks.text.settings.text.default"
        }
      ]
    },
    {
      "type": "button",
      "name": "t:sections.video_embed.blocks.button.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "button_label",
          "label": "t:sections.video_embed.blocks.button.settings.button_label.label",
          "info": "t:sections.video_embed.blocks.button.settings.button_label.info",
          "default": "t:sections.video_embed.blocks.button.settings.button_label.default"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "t:sections.video_embed.blocks.button.settings.button_link.label"
        },
        {
          "type": "select",
          "id": "button_variant",
          "label": "t:sections.all.button_variant.label",
          "options": [
            { "value": "solid", "label": "t:sections.all.button_variant.options__solid.label" },
            { "value": "outline", "label": "t:sections.all.button_variant.options__outline.label" }
          ],
          "default": "outline"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.video_embed.presets.name",
      "blocks": [
        { "type": "heading" },
        { "type": "text" },
        { "type": "button" }
      ]
    }
  ]
}
{% endschema %}
