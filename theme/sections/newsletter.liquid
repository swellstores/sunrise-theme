{%- liquid
  assign color_scheme = section.settings.color_scheme | default: 'scheme-4'
  assign top_padding = section.settings.top_padding | times: 0.1 | round: 1
  assign bottom_padding = section.settings.bottom_padding | times: 0.1 | round: 1
  assign reduced_padding_top = top_padding | times: 0.55 | round: 2
  assign reduced_padding_bottom = bottom_padding | times: 0.55 | round: 2
-%}

{% style %}
  .responsive-padding-{{ section.id }} {
    padding-top: {{ reduced_padding_top }}rem;
    padding-bottom: {{ reduced_padding_bottom }}rem;
  }

  @media (min-width: 1024px) {
    .responsive-padding-{{ section.id }} {
      padding-top: {{ top_padding }}rem;
      padding-bottom: {{ bottom_padding }}rem;
    }
  }
{% endstyle %}

<div
  class="bg-{{ color_scheme}} text-{{ color_scheme }} flex justify-center bg-[#FAF7FF] pt-64 pb-64 pl-24 pr-24 lg:p-160 responsive-padding-{{ section.id }}"
>
  <div class="max-w-content flex flex-col justify-center items-center">
    {%- for block in section.blocks -%}
      {%- case block.type -%}
        {%- when 'heading' -%}
          <h2 class="font-display font-heading text-heading-{{ block.settings.heading_size | default: 'small' }} text-center mb-8">
            {{ block.settings.heading | inline_editable: 'heading' }}
          </h2>
        {%- when 'text' -%}
          <div class="font-display formatted-text text-content text-center">
            {{ block.settings.text | inline_editable: 'text' }}
          </div>
        {%- when 'email_form' -%}
          <div class="flex w-full pt-32">
            {% form 'customer'
              , class: 'newsletter-form w-full'
            %}
              <input type="hidden" name="contact[tags]" value="newsletter">
              <div class="flex gap-4 justify-center newsletter-form-container">
                <div class="relative sm:min-w-384 w-full sm:w-330">
                  {% assign email_text = 'sections.newsletter.email' | t %}
                  {%
                    render 'input',
                    id: 'contact[email]',
                    type: 'email',
                    name: 'contact[email]',
                    value: form.email,
                    autocorrect: 'off',
                    autocapitalize: 'off',
                    autocomplete: 'email',
                    placeholder: email_text,
                    autofocus: form.errors,
                    required: 'true',
                    class: 'h-48',
                    aria_required: 'true',
                    aria_invalid: form.errors
                  %}
                </div>
                {% render 'button',
                  type: 'submit',
                  text: section.settings.button_text,
                  color_scheme: color_scheme,
                  variant: section.settings.button_variant
                %}
              </div>
              {%- if form.errors -%}
                <div class="text-red-600 mt-8 text-body-medium">{{ form.errors | default_errors }}</div>
              {%- endif -%}
              {%- if form.posted_successfully? -%}
                <div class="mt-8 text-green-600 text-body-medium">{{ 'sections.newsletter.success' | t }}</div>
              {%- endif -%}
            {% endform %}
          </div>
      {%- endcase -%}
    {%- endfor -%}
  </div>
</div>

{% schema %}
{
  "name": "t:sections.newsletter.name",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header"]
  },
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.colors_header.content"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.layout_header.content"
    },
    {
      "type": "select",
      "id": "button_variant",
      "label": "t:sections.all.button_variant.label",
      "options": [
        { "value": "solid", "label": "t:sections.all.button_variant.options__solid.label" },
        { "value": "outline", "label": "t:sections.all.button_variant.options__outline.label" }
      ],
      "default": "solid"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "t:sections.newsletter.settings.button_text.label",
      "default": "t:sections.newsletter.settings.button_text.default"
    },
    {
      "type": "range",
      "id": "top_padding",
      "label": "t:sections.all.padding.padding_top",
      "min": 0,
      "max": 96,
      "step": 1,
      "unit": "px",
      "default": 64
    },
    {
      "type": "range",
      "id": "bottom_padding",
      "label": "t:sections.all.padding.padding_bottom",
      "min": 0,
      "max": 96,
      "step": 1,
      "unit": "px",
      "default": 64
    }
  ],
  "blocks": [
    {
      "type": "heading",
      "name": "t:sections.newsletter.blocks.heading.name",
      "limit": 1,
      "settings": [
        {
          "type": "inline_richtext",
          "id": "heading",
          "default": "t:sections.newsletter.blocks.heading.settings.heading.default",
          "label": "t:sections.newsletter.blocks.heading.settings.heading.label"
        },
        {
          "type": "select",
          "id": "heading_size",
          "label": "t:sections.all.heading_size.label",
          "default": "small",
          "options": [
            { "value": "small", "label": "t:sections.all.heading_size.options__small.label" },
            { "value": "medium", "label": "t:sections.all.heading_size.options__medium.label" },
            { "value": "large", "label": "t:sections.all.heading_size.options__large.label" },
            { "value": "extra-large", "label": "t:sections.all.heading_size.options__extra_large.label" }
          ]
        }
      ]
    },
    {
      "type": "text",
      "name": "t:sections.newsletter.blocks.text.name",
      "limit": 1,
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "default": "t:sections.newsletter.blocks.text.settings.text.default",
          "label": "t:sections.newsletter.blocks.text.settings.text.label"
        }
      ]
    },
    {
      "type": "email_form",
      "name": "t:sections.newsletter.blocks.email_form.name",
      "limit": 1
    }
  ],
  "presets": [
    {
      "name": "t:sections.newsletter.presets.name",
      "blocks": [
        { "type": "heading" },
        { "type": "text" },
        { "type": "email_form" }
      ]
    }
  ]
}
{% endschema %}
