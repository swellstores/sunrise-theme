{%- liquid
  assign text_alignment = section.settings.text_alignment
  
  if text_alignment == 'center'
    assign align_items_class = 'items-center'
  elsif text_alignment == 'left'
    assign align_items_class = 'items-start'
  else
    assign align_items_class = 'items-end'
  endif

  assign top_padding = section.settings.top_padding | times: 0.1 | round: 1
  assign bottom_padding = section.settings.bottom_padding | times: 0.1 | round: 1
  assign reduced_padding_top = top_padding | times: 0.55 | round: 2
  assign reduced_padding_bottom = bottom_padding | times: 0.55 | round: 2

  assign columns = section.settings.columns | times: 2

  assign last_column_start = section.blocks.size | divided_by: section.settings.columns | floor | times: section.settings.columns
  assign missed_items = last_column_start | plus: section.settings.columns | minus: section.blocks.size

  assign md_columns = section.settings.columns
  if md_columns > 2
    assign md_columns = 2
  endif
  assign md_last_column_start = section.blocks.size | divided_by: md_columns | floor | times: md_columns
  assign md_missed_items = md_last_column_start | plus: md_columns | minus: section.blocks.size

  assign lg_columns = section.settings.columns
  if lg_columns > 3
    assign lg_columns = 2
  endif
  assign lg_last_column_start = section.blocks.size | divided_by: lg_columns | floor | times: lg_columns
  assign lg_missed_items = lg_last_column_start | plus: lg_columns | minus: section.blocks.size
-%}

{% style %}
  .responsive-padding-{{ section.id }} {
    padding-top: {{ reduced_padding_top }}rem;
    padding-bottom: {{ reduced_padding_bottom }}rem;
  }

  @media (min-width: 1024px) {
    .responsive-padding-{{ section.id }} {
      padding-top: {{ top_padding }}rem;
      padding-bottom: {{ bottom_padding }}rem;
    }
  }
{% endstyle %}

<div
  class="
    bg-{{ section.settings.color_scheme }}
    pt-64 pb-64 pr-24 pl-24 lg:pl-160
    lg:pr-160
    lg:pt-96
    lg:pb-96
    responsive-padding-{{ section.id }}
  "
>
  <div class="flex flex-col gap-48 max-w-container w-full mx-auto">
    <div
      class="
        grid
        grid-cols-2
        sm:grid-cols-2
        md:grid-cols-{% if section.settings.columns > 2 %}4{% else %}{{ columns }}{% endif %}
        lg:grid-cols-{% if section.settings.columns > 3 %}6{% else %}{{ columns }}{% endif %}
        xl:grid-cols-{{ columns }}
        text-{{ text_alignment }} text-{{ section.settings.color_scheme }}
      "
      style="gap: {{ section.settings.grid_gap }}px;"
    >
      {%- for block in section.blocks -%}
        {% liquid
          assign ind = forloop.index0

          assign col = 'auto'
          if ind >= last_column_start
            assign col = ind | minus: last_column_start | times: 2 | plus: 1 | plus: missed_items
          endif

          assign md_col = 'auto'
          if ind >= md_last_column_start
            assign md_col = ind | minus: md_last_column_start | times: 2 | plus: 1 | plus: md_missed_items
          endif

          assign lg_col = 'auto'
          if ind >= lg_last_column_start
            assign lg_col = ind | minus: lg_last_column_start | times: 2 | plus: 1 | plus: lg_missed_items
          endif
        %}
        <div class="
            flex flex-col {{ align_items_class }} justify-center
            col-span-2
            col-start-auto
            sm:col-start-auto
            md:col-start-{{ md_col }}
            lg:col-start-{{ lg_col }}
            xl:col-start-{{ col }}
        ">
          <div class="max-w-300">
            <div class="flex flex-col gap-8">
              <div class="flex flex-col items-center gap-8">
                {%- if block.settings.custom_icon != blank -%}
                  {%
                    render 'image',
                    picture_class: 'flex justify-center',
                    class: 'w-32 h-32 object-contain',
                    image: block.settings.custom_icon
                  %}
                {% else %}
                  <ion-icon
                    class="w-32 h-32 brand-highlight-{{ section.settings.color_scheme }}"
                    name="{{ block.settings.icon }}"
                    aria-hidden="true"
                  ></ion-icon>
                {%- endif -%}
              </div>
              <div>
                {%- if block.settings.pre_heading -%}
                  <h2 class="font-display font-pre-heading text-pre-heading mb-8">
                    {{ block.settings.pre_heading }}
                  </h2>
                {% endif %}
                {%- if block.settings.heading -%}
                  <h2 class="mb-8 font-display font-heading text-heading-{{ block.settings.heading_size | default: 'small' }}">
                    {{ block.settings.heading }}
                  </h2>
                {% endif %}
                {%- if block.settings.text != blank -%}
                  <div class="font-display formatted-text text-content">
                    {{ block.settings.text }}
                  </div>
                {%- endif -%}
              </div>
            </div>
          </div>
        </div>
      {%- endfor -%}
    </div>
  </div>
  <div class="
    hidden
    grid-cols-2 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-2 xl:grid-cols-2
    grid-cols-4 md:grid-cols-4 lg:grid-cols-4 xl:grid-cols-4
    grid-cols-6 lg:grid-cols-6 xl:grid-cols-6
    grid-cols-8 xl:grid-cols-8
    grid-cols-10 xl:grid-cols-10
    col-start-auto
    xl:col-start-auto xl:col-start-2 xl:col-start-3 xl:col-start-4 xl:col-start-5 xl:col-start-6 xl:col-start-7 xl:col-start-8
    sm:col-start-auto
    md:col-start-auto md:col-start-2
    lg:col-start-auto lg:col-start-2 lg:col-start-3 lg:col-start-4
  " />
</div>

{% schema %}
{
  "name": "t:sections.feature_list.name",
  "max_blocks": 7,
  "tag": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.colors_header.content"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.layout_header.content"
    },
    {
      "type": "range",
      "id": "columns",
      "label": "t:sections.feature_list.settings.columns.label",
      "info": "t:sections.feature_list.settings.columns.info",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 3
    },
    {
      "type": "range",
      "id": "top_padding",
      "label": "t:sections.all.padding.padding_top",
      "min": 0,
      "max": 96,
      "step": 1,
      "unit": "px",
      "default": 40
    },
    {
      "type": "range",
      "id": "bottom_padding",
      "label": "t:sections.all.padding.padding_bottom",
      "min": 0,
      "max": 96,
      "step": 1,
      "unit": "px",
      "default": 40
    },
    {
      "type": "range",
      "id": "grid_gap",
      "label": "t:sections.feature_list.settings.grid_gap.label",
      "info": "t:sections.feature_list.settings.grid_gap.info",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 64
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "t:sections.all.text_alignment.label",
      "default": "center",
      "options": [
        {
          "value": "left",
          "label": "t:sections.all.text_alignment.options__left.label"
        },
        {
          "value": "center",
          "label": "t:sections.all.text_alignment.options__center.label"
        },
        {
          "value": "right",
          "label": "t:sections.all.text_alignment.options__right.label"
        }
      ]
    }
  ],
  "blocks": [
    {
      "type": "item",
      "name": "t:sections.feature_list.blocks.item.name",
      "limit": 7,
      "settings": [
        {
          "type": "text",
          "id": "icon",
          "label": "t:sections.feature_list.blocks.item.settings.icon.label",
          "info": "t:sections.feature_list.blocks.item.settings.icon.info",
          "default": "storefront-outline"
        },
        {
          "type": "image_picker",
          "id": "custom_icon",
          "label": "t:sections.feature_list.blocks.item.settings.custom_icon.label"
        },
        {
          "type": "inline_richtext",
          "id": "pre_heading",
          "label": "t:sections.all.pre_heading.label",
          "default": "t:sections.feature_list.blocks.item.settings.pre_heading.default"
        },
        {
          "type": "inline_richtext",
          "id": "heading",
          "label": "t:sections.feature_list.blocks.item.settings.heading.label",
          "default": "t:sections.feature_list.blocks.item.settings.heading.default"
        },
        {
          "type": "select",
          "id": "heading_size",
          "label": "t:sections.all.heading_size.label",
          "default": "small",
          "options": [
            { "value": "small", "label": "t:sections.all.heading_size.options__small.label" },
            { "value": "medium", "label": "t:sections.all.heading_size.options__medium.label" },
            { "value": "large", "label": "t:sections.all.heading_size.options__large.label" },
            { "value": "extra-large", "label": "t:sections.all.heading_size.options__extra_large.label" }
          ]
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "t:sections.feature_list.blocks.item.settings.text.label",
          "default": "t:sections.feature_list.blocks.item.settings.text.default"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.feature_list.presets.name",
      "blocks": [
        { "type": "item" },
        { "type": "item" },
        { "type": "item" },
      ]
    }
  ]
}
{% endschema %}
